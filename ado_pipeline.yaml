trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '18'  # Versi칩n de Node.js que deseas utilizar
  SONARQUBE_ENDPOINT: 'sonarqube'  # Nombre del servicio SonarQube configurado en Azure DevOps

stages:
  - stage: InstallAndTest
    jobs:
      - job: InstallDependenciesAndRunTests
        displayName: 'Instalar dependencias y ejecutar pruebas'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Usar Node.js $(NODE_VERSION)'

          - script: npm install
            displayName: 'Instalar dependencias'

          - script: npm test
            displayName: 'Ejecutar pruebas'

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**/TEST-*.xml'
              testRunTitle: 'Resultados de pruebas unitarias'
            condition: succeededOrFailed()
            displayName: 'Publicar resultados de las pruebas'

  - stage: SonarQubeAnalysis
    dependsOn: InstallAndTest
    condition: succeededOrFailed()
    jobs:
      - job: RunSonarQubeAnalysis
        displayName: 'Ejecutar an치lisis de SonarQube'
        steps:
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: $(SONARQUBE_ENDPOINT)
              scannerMode: 'CLI'
              configMode: 'file' # Indica que se usar치 el archivo sonar-project.properties
              
          - script: npm run test
            displayName: 'Ejecutar pruebas para an치lisis de SonarQube'

          - task: SonarQubeAnalyze@5
            displayName: 'Analizar con SonarQube'

          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'
            displayName: 'Publicar resultados en SonarQube'
